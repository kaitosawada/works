module.exports="// http://glslsandbox.com/e#49090.4\n\n#ifdef GL_ES\nprecision mediump float;\n#define GLSLIFY 1\n#endif\n\nuniform int iFrame;\nuniform vec2 iMouse;\nuniform vec2 iResolution;\n\nconst int complexity = 10;\nconst float color_intensity = 0.5;\n\nfloat noise(vec3 x) {\n  vec3 p = fract(x) * 0.1;\n  float n = p.x + p.y + p.z;\n  return sin(n);\n}\n\nvoid main(void) {\n\n  float time = float(iFrame) * 0.02;\n  vec2 uv = (gl_FragCoord.xy / max(iResolution.x, iResolution.y) - 0.8) * 2.0;\n  vec3 p = vec3(uv.x, uv.y, (uv.x + uv.y) / 2.0);\n\n  for (int i = 1; i < complexity; i++) {\n    vec3 newp = p + time * 0.1;\n    newp.x += 0.6 * sin(float(i) * p.y + 0.3 * float(i) + 0.1) + 0.5 + noise(p) + 0.1;\n    newp.y += 0.6 * sin(float(i) * p.z + 0.3 * float(i + 10) + 0.5) + 0.5 + noise(p) + 0.1;\n    newp.z += 0.6 * sin(float(i) * p.x + 0.3 * float(i + 20) + 10.0) + 0.5 + noise(p) + 0.1;\n    p = newp;\n  }\n  vec3 col = vec3(color_intensity * sin(p.x) + 0.5,\n                  color_intensity * sin(p.y) + 0.5,\n                  color_intensity * sin(p.z) + 0.5);\n  gl_FragColor = vec4(col, 1.0);\n}";